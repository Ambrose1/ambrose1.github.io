{
    "version": "https://jsonfeed.org/version/1",
    "title": "Ambrose&#x27;s Blog",
    "description": "",
    "home_page_url": "https://ambrose1.github.io",
    "feed_url": "https://ambrose1.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "Ambrose duan"
    },
    "items": [
        {
            "id": "https://ambrose1.github.io/iosbao-ti-ji-wu-yong-dai-ma-jian-ce.html",
            "url": "https://ambrose1.github.io/iosbao-ti-ji-wu-yong-dai-ma-jian-ce.html",
            "title": "iOS包体积 无用代码监测",
            "author": {
                "name": "Ambrose duan"
            },
            "tags": [
            ],
            "date_published": "2024-07-29T19:28:13+08:00",
            "date_modified": "2024-07-29T19:28:13+08:00"
        },
        {
            "id": "https://ambrose1.github.io/mei-ri-xin-xi-chai.html",
            "url": "https://ambrose1.github.io/mei-ri-xin-xi-chai.html",
            "title": "每日信息差",
            "content_html": "<figure class=\"post__image\"><img loading=\"lazy\" src=\"https://ambrose1.github.io/mei-ri-xin-xi-chai.html\" alt=\"目录测试\"  data-is-external-image=\"true\"></figure>",
            "author": {
                "name": "Ambrose duan"
            },
            "tags": [
            ],
            "date_published": "2024-07-29T09:30:42+08:00",
            "date_modified": "2024-08-09T09:41:38+08:00"
        },
        {
            "id": "https://ambrose1.github.io/ruan-jian-she-ji-shi-bei-kao.html",
            "url": "https://ambrose1.github.io/ruan-jian-she-ji-shi-bei-kao.html",
            "title": "软件设计师备考",
            "summary": "考试信息 考试时间：5、11月 考试形式： 1. 上午-选择题目 2. 下午简答题。 3. 满分75-45通过。 4. 机考",
            "content_html": "<h1 id=\"考试信息\">考试信息</h1>\n<ul>\n<li>考试时间：5、11月</li>\n<li>考试形式：\n      1. 上午-选择题目<br>      2. 下午简答题。\n      3. 满分75-45通过。\n      4. 机考</li>\n</ul>\n",
            "author": {
                "name": "Ambrose duan"
            },
            "tags": [
            ],
            "date_published": "2024-07-29T09:30:20+08:00",
            "date_modified": "2024-07-29T09:30:20+08:00"
        },
        {
            "id": "https://ambrose1.github.io/ruby-kai-fa-gui-fan.html",
            "url": "https://ambrose1.github.io/ruby-kai-fa-gui-fan.html",
            "title": "Ruby 开发规范",
            "summary": "Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &amp;&amp;/||. 判断条件的body只有一行时，建议这样写： something() if condition&hellip;",
            "content_html": "<ol>\n<li>Favor modifier <code>if</code> usage when having a single-line body. Another good alternative is the usage of control flow <code>&amp;&amp;</code>/<code>||</code>.</li>\n</ol>\n<p>判断条件的body只有一行时，建议这样写：</p><pre><code class=\"language-ruby\">something() if condition\n</code></pre>\n<p>2</p>",
            "author": {
                "name": "Ambrose duan"
            },
            "tags": [
                   "Ruby"
            ],
            "date_published": "2024-07-26T16:52:28+08:00",
            "date_modified": "2024-07-26T16:52:28+08:00"
        },
        {
            "id": "https://ambrose1.github.io/bao-ti-ji-shou-shen.html",
            "url": "https://ambrose1.github.io/bao-ti-ji-shou-shen.html",
            "title": "iOS 包体积治理~编译配置",
            "summary": "编译配置，pod库搜不到的项都是继承壳工程的。 改打包配置一般都是所以target继承自壳工程，所以一般改配置都是在壳工程修改。 一般公司的打包机器，打测试包都不会修改打包机的壳工程配置，做修改也不能直接线上集成测试，所以可以自己在本地xcode Arechive 包。 自己Archive记得清理构建文件夹。 不确定是否带上了修改后的配置，可以使用命令构建包： xcodebuild -project path/to/OpenDriver.xcodeproj -scheme OpenDriver -sdk iphoneos -archivePath path/to/OpenDriver.xcarchive -configuration Release clean build 如果你不需要考虑模拟器，而是想要直接构建并安装到真实设备上，你可以省略与模拟器相关的参数。以下是一个针对真实设备的 xcodebuild 命令示例，同时使用了&hellip;",
            "content_html": "<ol>\n<li>编译配置，pod库搜不到的项都是继承壳工程的。</li>\n<li>改打包配置一般都是所以target继承自壳工程，所以一般改配置都是在壳工程修改。</li>\n<li>一般公司的打包机器，打测试包都不会修改打包机的壳工程配置，做修改也不能直接线上集成测试，所以可以自己在本地xcode Arechive 包。</li>\n<li>自己Archive记得清理构建文件夹。</li>\n</ol>\n<p>不确定是否带上了修改后的配置，可以使用命令构建包：</p><pre><code>xcodebuild -project path/to/OpenDriver.xcodeproj -scheme OpenDriver -sdk iphoneos -archivePath path/to/OpenDriver.xcarchive -configuration Release clean build\n</code></pre>\n<p>如果你不需要考虑模拟器，而是想要直接构建并安装到真实设备上，你可以省略与模拟器相关的参数。以下是一个针对真实设备的 <code>xcodebuild</code> 命令示例，同时使用了 <code>--repo-update</code> 参数：</p><pre><code class=\"language-bash\">xcodebuild -project MyApp.xcodeproj -scheme MyApp -destination &#39;generic/platform=iOS&#39; -configuration Release clean build install --repo-update\n</code></pre>\n<p>在这个命令中：</p><ul>\n<li><code>-destination &#39;generic/platform=iOS&#39;</code>：指定目标平台为 iOS，不指定具体设备，这样构建出的包可以安装到任何连接的 iOS 设备上。</li>\n<li>其他参数与之前相同，包括项目文件、scheme、构建配置、清理和构建操作，以及 <code>--repo-update</code> 参数用于更新依赖。</li>\n</ul>\n<p>请注意，为了在真实设备上安装应用，你需要有一个有效的开发者账号，并且设备需要注册到你的 Apple 开发者账号下，并且处于信任状态。</p><p>在执行这个命令之前，确保你的设备已经连接到电脑，并且在 Xcode 中被识别。此外，你可能需要在设备上手动信任开发者证书。</p><p>如果你的项目使用了其他依赖管理工具，确保在执行 <code>xcodebuild</code> 命令之前，先手动更新这些依赖，或者在构建脚本中加入相应的更新步骤。</p><h3 id=\"xcworkspace\">xcworkspace</h3>\n<p>如果你的项目使用了 CocoaPods 或其他依赖管理工具，并且这些依赖被整合到了一个 <code>.xcworkspace</code> 文件中，那么在使用 <code>xcodebuild</code> 命令时，你需要指定 <code>.xcworkspace</code> 而不是 <code>.xcodeproj</code> 文件。这是因为 <code>.xcworkspace</code> 包含了项目文件和所有依赖的配置。</p><p>例如，如果你的项目名为 <code>MyApp</code>，并且你使用了 CocoaPods，那么你应该使用以下命令：</p><pre><code class=\"language-bash\">xcodebuild -workspace MyApp.xcworkspace -scheme MyApp -destination &#39;generic/platform=iOS&#39; -configuration Release clean build install --repo-update\n</code></pre>\n<p>在这个命令中：</p><ul>\n<li><code>-workspace MyApp.xcworkspace</code>：指定工作空间文件，而不是项目文件。这确保了所有依赖项都被正确加载。</li>\n<li>其他参数与之前相同，包括 scheme、目标平台、构建配置、清理和构建操作，以及 <code>--repo-update</code> 参数用于更新依赖。</li>\n</ul>\n<p>如果你的项目没有使用 <code>.xcworkspace</code>，或者你没有使用任何依赖管理工具，那么你可以继续使用 <code>.xcodeproj</code> 文件。</p><p>请记住，使用 <code>.xcworkspace</code> 是在项目中使用了依赖管理工具（如 CocoaPods、Carthage 等）时的常见做法，它确保了所有依赖项都被正确地集成到 Xcode 项目中。如果你的项目没有使用这些工具，那么你只需要关注 <code>.xcodeproj</code> 文件即可。</p><p>调整完编译配置，没有任何效果，未知原因待确定。</p>",
            "author": {
                "name": "Ambrose duan"
            },
            "tags": [
                   "iOS"
            ],
            "date_published": "2024-07-26T14:50:11+08:00",
            "date_modified": "2024-07-29T20:30:18+08:00"
        },
        {
            "id": "https://ambrose1.github.io/guan-yu-ru-he-xia-zai-appstore-bao.html",
            "url": "https://ambrose1.github.io/guan-yu-ru-he-xia-zai-appstore-bao.html",
            "title": "关于如何下载appStore 包",
            "summary": "libimobiledevice 不越狱操作iphone安装包，查看设备信息，安装包信息，备份。 brew tap majd/repo brew install ipatool 登录： ipatool auth login -e &quot;邮箱&quot; -p &quot;密码&quot; 需要输入设备上提示的二次确认6位数字密码 ipatool search --limit 1 花小猪打车 购买许可：&hellip;",
            "content_html": "<p><strong>libimobiledevice</strong> 不越狱操作iphone安装包，查看设备信息，安装包信息，备份。</p><pre><code>brew tap majd/repo\nbrew install ipatool\n</code></pre>\n<p>登录：</p><pre><code>ipatool auth login -e &quot;邮箱&quot; -p &quot;密码&quot;\n</code></pre>\n<p>需要输入设备上提示的二次确认6位数字密码</p><pre><code>ipatool search --limit 1 花小猪打车\n</code></pre>\n<p>购买许可：</p><pre><code>ipatool purchase --bundle-identifier com.kfhuaxiaozhu.driver\n</code></pre>\n<p>下载</p><pre><code>ipatool download --bundle-identifier com.kfhuaxiaozhu.driver --output kfdirver.ipa\n</code></pre>\n",
            "author": {
                "name": "Ambrose duan"
            },
            "tags": [
                   "iOS"
            ],
            "date_published": "2024-07-26T14:37:27+08:00",
            "date_modified": "2024-07-26T16:53:40+08:00"
        },
        {
            "id": "https://ambrose1.github.io/ambroses-blog.html",
            "url": "https://ambrose1.github.io/ambroses-blog.html",
            "title": "Ambrose&#x27;s blog",
            "summary": "hi! Ambrose Dyx will be recording all learning tasks here…",
            "content_html": "<p>hi! Ambrose Dyx will be recording all learning tasks here…</p>",
            "author": {
                "name": "Ambrose duan"
            },
            "tags": [
            ],
            "date_published": "2024-07-26T14:24:14+08:00",
            "date_modified": "2024-07-26T14:24:14+08:00"
        }
    ]
}
